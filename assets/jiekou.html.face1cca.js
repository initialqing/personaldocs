import{_ as e,r as o,o as c,c as l,a as n,e as p,w as t,b as s,d as i}from"./app.71cb111c.js";const u={},r=n("h1",{id:"\u76EE\u5F55",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u76EE\u5F55","aria-hidden":"true"},"#"),s(" \u76EE\u5F55")],-1),k={class:"table-of-contents"},d=i(`<h2 id="_1\u3001\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u63A5\u53E3" aria-hidden="true">#</a> 1\u3001\u63A5\u53E3</h2><p>\u58F0\u660E\u53D8\u91CF\u7C7B\u578B\u7684\u7ED3\u6784\uFF0C\u793A\u4F8BA\u4F7F\u7528\u5185\u8054\u6CE8\u89E3\uFF0C\u793A\u4F8BB\u4F7F\u7528\u63A5\u53E3\u5F62\u5F0F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u793A\u4F8BA   \u4F7F\u7528\u7C7B\u578B\u6CE8\u89E3</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> myPoint<span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u793A\u4F8BB \u4F7F\u7528\u63A5\u53E3\u5B9A\u4E49</span>
<span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> myPoint<span class="token operator">:</span> Point<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8BB\u6709\u597D\u5904\u53EF\u4EE5\u76F4\u63A5\u7528\u793A\u4F8BB,\u57FA\u4E8E\xA0<code>myPoint</code>\xA0\u7684\u5E93\u6765\u6DFB\u52A0\u65B0\u6210\u5458, \u90A3\u4E48\u4ED6\u53EF\u4EE5\u8F7B\u677E\u5C06\u6B64\u6210\u5458\u6DFB\u52A0\u5230\xA0<code>myPoint</code>\xA0\u7684\u73B0\u6709\u58F0\u660E\u4E2D:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Point</span><span class="token punctuation">{</span>
  z<span class="token operator">:</span><span class="token builtin">number</span>
<span class="token punctuation">}</span>
myPoint<span class="token punctuation">.</span>z \u6CA1\u6709\u62A5\u9519
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1\u3001\u7C7B\u53EF\u4EE5\u5B9E\u73B0\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_1-1\u3001\u7C7B\u53EF\u4EE5\u5B9E\u73B0\u63A5\u53E3" aria-hidden="true">#</a> 1.1\u3001\u7C7B\u53EF\u4EE5\u5B9E\u73B0\u63A5\u53E3</h3><p>\u7C7B\u5B9E\u73B0\u63A5\u53E3\uFF0C\u63A5\u53E3\uFF08\u7C7B\uFF09\u6216\u522B\u4EBA\u5B9A\u4E49\u7684\u5BF9\u8C61\u7ED3\u6784\uFF0C\u53EF\u4EE5\u4F7F\u7528\xA0<code>implements</code>\xA0\u5173\u952E\u5B57\u6765\u786E\u4FDD\u5176\u517C\u5BB9\u6027\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token comment">// z:number</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">MyPoint</span> <span class="token keyword">implements</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// Same as Point</span>
  <span class="token comment">// z:number mussing memeber &#39;z&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> foo<span class="token operator">:</span> Point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// console.log(foo);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2\u3001\u5E76\u4E0D\u662F\u6BCF\u4E2A\u63A5\u53E3\u90FD\u5BB9\u6613\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-2\u3001\u5E76\u4E0D\u662F\u6BCF\u4E2A\u63A5\u53E3\u90FD\u5BB9\u6613\u5B9E\u73B0" aria-hidden="true">#</a> 1.2\u3001\u5E76\u4E0D\u662F\u6BCF\u4E2A\u63A5\u53E3\u90FD\u5BB9\u6613\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Crazy</span> <span class="token punctuation">{</span>
  <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> hello<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">CrazyImpl</span> <span class="token keyword">implements</span> <span class="token class-name">Crazy</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> hello<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> ci <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CrazyImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2\u3001\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u679A\u4E3E" aria-hidden="true">#</a> 2\u3001\u679A\u4E3E</h2><p>\u6536\u96C6\u5E76\u8054\u53D8\u91CF\u7684\u4E00\u79CD\u65B9\u5F0F\uFF0C\u5176\u4ED6\u7684\u7F16\u7A0B\u8BED\u8A00\u4E5F\u90FD\u6709\u679A\u4E3E\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//  \u5B9A\u4E49</span>
<span class="token keyword">enum</span> CardSuit <span class="token punctuation">{</span>
  Clubs<span class="token punctuation">,</span>
  Diamonds<span class="token punctuation">,</span>
  Hearts<span class="token punctuation">,</span>
  Speaders<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> Card<span class="token operator">:</span>CardSuit <span class="token operator">=</span> CardSuit<span class="token punctuation">.</span>Clubs<span class="token punctuation">;</span>
<span class="token comment">// \u7C7B\u578B\u5B89\u5168</span>
Card <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error: string \u4E0D\u80FD\u8D4B\u503C\u7ED9 \`CardSuit\` \u7C7B\u578B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1\u3001\u6570\u5B57\u7C7B\u578B\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#_2-1\u3001\u6570\u5B57\u7C7B\u578B\u679A\u4E3E" aria-hidden="true">#</a> 2.1\u3001\u6570\u5B57\u7C7B\u578B\u679A\u4E3E</h3><p>\u53EF\u4EE5\u901A\u8FC7\u5728\u5B9A\u4E49\u679A\u4E3E\u7684\u65F6\u5019\u66F4\u6539\u679A\u4E3E\u7684\u7D22\u5F15\u503C\uFF0C<code>fase=1</code>\u8868\u793A\u679A\u4E3E\u5BF9\u5E94\u7684\u7D22\u5F15\u503C\u4ECE1\u5F00\u59CB\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  red<span class="token punctuation">,</span>
  Green<span class="token punctuation">,</span>
  Blue<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> col <span class="token operator">=</span> Color<span class="token punctuation">.</span>red<span class="token punctuation">;</span>
col <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">// console.log(Color[&#39;red&#39;]);</span>

<span class="token comment">// \u6570\u5B57\u7C7B\u578B\u679A\u4E3E\u4E0E\u5B57\u7B26\u4E32\u7C7B\u578B</span>
<span class="token keyword">enum</span> Tristate <span class="token punctuation">{</span>
  <span class="token comment">// \u6539\u53D8\u679A\u4E3E\u5BF9\u5E94\u7684\u7D22\u5F15\u503C</span>
  False <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  True <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
  Unknown <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// False</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;False&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span>Tristate<span class="token punctuation">.</span>False<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2\u3001\u4F7F\u7528\u6570\u5B57\u7C7B\u578B\u4F5C\u4E3A\u6807\u5FD7" tabindex="-1"><a class="header-anchor" href="#_2-2\u3001\u4F7F\u7528\u6570\u5B57\u7C7B\u578B\u4F5C\u4E3A\u6807\u5FD7" aria-hidden="true">#</a> 2.2\u3001\u4F7F\u7528\u6570\u5B57\u7C7B\u578B\u4F5C\u4E3A\u6807\u5FD7</h3><p><code>&lt;&lt;</code> \u8868\u793A\u5DE6\u79FB\u8FD0\u7B97\u7B26,\u76F8\u5F53\u4E0E\u628A\u6570\u5B57\u5BF9\u5E94\u7684\u4E8C\u8FDB\u5236\u6570\u5B57\u8FDB\u884C\u5DE6\u79FB\u76F8\u5E94\u7684\u4F4D\u6570\uFF0C<code>[key: string]: any</code>\u8868\u793A\u4E00\u4E2A\u7D22\u5F15\u7B7E\u540D\uFF0C\u5176\u591A\u7528\u4E8E\u63A5\u53E3\u7684\u5B9A\u4E49\u5728\u5176\u4ED6\u5C5E\u6027\u4E0D\u786E\u5B9A\u4F46\u662F\u5C5E\u6027\u548C\u503C\u7684\u7C7B\u578B\u90FD\u786E\u5B9A\u7684\u60C5\u51B5\uFF0C\u8868\u793A\u952E\u7C7B\u578B\u4E3Astring\uFF0C\u503C\u4E3A\u4EFB\u610F\u7684\u952E\u503C\u5BF9\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">enum</span> AnimalsFlags <span class="token punctuation">{</span>
  None <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  HasClaws <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 0001</span>
  CanFlay <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 0010</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Animals</span> <span class="token punctuation">{</span>
  flag<span class="token operator">:</span> AnimalsFlags<span class="token punctuation">;</span>
  <span class="token comment">// \u8868\u793A\u5176\u4ED6\u7684\u5C5E\u6027\u503C\u952E\u7684\u7C7B\u578B\u4E3Astring \u503C\u7684\u7C7B\u578B\u4E3A\u4EFB\u610F</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">function</span> <span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animals<span class="token operator">:</span> Animals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> animalsFlags <span class="token operator">=</span> animals<span class="token punctuation">.</span>flag<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>animalsFlags <span class="token operator">&amp;</span> AnimalsFlags<span class="token punctuation">.</span>HasClaws<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;animal has claws&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>animalsFlags <span class="token operator">&amp;</span> AnimalsFlags<span class="token punctuation">.</span>CanFlay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;animal can flay&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>animalsFlags <span class="token operator">==</span> AnimalsFlags<span class="token punctuation">.</span>None<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;animal none&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u4EE3\u7801</span>
<span class="token keyword">const</span> animal<span class="token operator">:</span> Animals <span class="token operator">=</span> <span class="token punctuation">{</span> flag<span class="token operator">:</span> AnimalsFlags<span class="token punctuation">.</span>None <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u521D\u59CB\u7684\u6807\u5FD7\u4E3A</span>
<span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4FEE\u6539\u4E00\u4E2A\u6807\u5FD7</span>
animal<span class="token punctuation">.</span>flag <span class="token operator">|=</span> AnimalsFlags<span class="token punctuation">.</span>HasClaws<span class="token punctuation">;</span>
<span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6E05\u9664\u4E00\u4E2A\u6807\u5FD7</span>
animal<span class="token punctuation">.</span>flag <span class="token operator">&amp;=</span> <span class="token operator">~</span>AnimalsFlags<span class="token punctuation">.</span>HasClaws<span class="token punctuation">;</span>
<span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5408\u5E76\u4E24\u4E2A\u6807\u5FD7</span>
animal<span class="token punctuation">.</span>flag <span class="token operator">|=</span> AnimalsFlags<span class="token punctuation">.</span>HasClaws <span class="token operator">|</span> AnimalsFlags<span class="token punctuation">.</span>CanFlay<span class="token punctuation">;</span>
<span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// console.log();</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>TIP</strong></p><p>\u4F7F\u7528 |= \u53EF\u4EE5\u66FF\u6362\u4E00\u4E2A\u6807\u5FD7</p><p>\u7EC4\u5408\u4F7F\u7528\u6807\u5FD7&amp;= \u548C ~ \u53EF\u4EE5\u6E05\u9664\u4E00\u4E2A\u6807\u5FD7</p><p>| \u53EF\u4EE5\u5408\u5E76\u591A\u4E2A\u6807\u5FD7</p></blockquote><h3 id="_2-3\u3001\u5B57\u7B26\u4E32\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#_2-3\u3001\u5B57\u7B26\u4E32\u679A\u4E3E" aria-hidden="true">#</a> 2.3\u3001\u5B57\u7B26\u4E32\u679A\u4E3E</h3><p>\u8BED\u6CD5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">enum</span> EvidenceTypeEnum <span class="token punctuation">{</span>
  <span class="token constant">UNKNOWN</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">PASSPORT_VISA</span> <span class="token operator">=</span> <span class="token string">&#39;passport_visa&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">PASSPORT</span> <span class="token operator">=</span> <span class="token string">&#39;passport&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">SIGHTED_STUDENT_CARD</span> <span class="token operator">=</span> <span class="token string">&#39;sighted_tertiary_edu_id&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">SIGHTED_KEYPASS_CARD</span> <span class="token operator">=</span> <span class="token string">&#39;sighted_keypass_card&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">SIGHTED_PROOF_OF_AGE_CARD</span> <span class="token operator">=</span> <span class="token string">&#39;sighted_proof_of_age_card&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>EvidenceTypeEnum<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> EvidenceTypeEnum<span class="token punctuation">.</span><span class="token constant">PASSPORT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You provided a passport&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \`passport\`</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6253\u5370\u5B9A\u4E49\u7684\u679A\u4E3E<code>console.log(EvidenceTypeEnum);</code>\u7ED3\u679C\u4E3A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">{</span><span class="token constant">PASSPORT</span><span class="token operator">:</span> <span class="token string">&quot;passport&quot;</span>
<span class="token constant">PASSPORT_VISA</span><span class="token operator">:</span> <span class="token string">&quot;passport_visa&quot;</span>
<span class="token constant">SIGHTED_KEYPASS_CARD</span><span class="token operator">:</span> <span class="token string">&quot;sighted_keypass_card&quot;</span>
<span class="token constant">SIGHTED_PROOF_OF_AGE_CARD</span><span class="token operator">:</span> <span class="token string">&quot;sighted_proof_of_age_card&quot;</span>
<span class="token constant">SIGHTED_STUDENT_CARD</span><span class="token operator">:</span> <span class="token string">&quot;sighted_tertiary_edu_id&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4\u3001\u5E38\u91CF\u679A\u4E3E\u7684\u8868\u8FBE\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-4\u3001\u5E38\u91CF\u679A\u4E3E\u7684\u8868\u8FBE\u65B9\u6CD5" aria-hidden="true">#</a> 2.4\u3001\u5E38\u91CF\u679A\u4E3E\u7684\u8868\u8FBE\u65B9\u6CD5</h3><p>\u8FD9\u6837\u5B9A\u4E49\u4F1A\u63D0\u5347\u4E00\u70B9\u6027\u80FD\uFF0C\u56E0\u4E3A\u4F1A\u7F16\u8BD1\u6210<code>let lie = 0</code>\uFF0C\u800C\u4E0D\u662F\u4F1A\u88AB\u7F16\u8BD1\u6210 JavaScript\xA0<code>let lie = Tristate.False</code>\u6240\u4EE5\u5728\u8FD0\u884C\u6267\u884C\u65F6\uFF0C\u5B83\u5C06\u4F1A\u67E5\u627E\u53D8\u91CF\xA0<code>Tristate</code>\xA0\u548C\xA0<code>Tristate.False</code>\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5E38\u91CF\u679A\u4E3E</span>
<span class="token keyword">const</span> <span class="token keyword">enum</span> TristateConst <span class="token punctuation">{</span>
  False<span class="token punctuation">,</span>
  True<span class="token punctuation">,</span>
  Unknown<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> lie <span class="token operator">=</span> TristateConst<span class="token punctuation">.</span>False<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5\u3001\u5728\u679A\u4E3E\u4E2D\u52A0\u5165\u9759\u6001\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-5\u3001\u5728\u679A\u4E3E\u4E2D\u52A0\u5165\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a> 2.5\u3001\u5728\u679A\u4E3E\u4E2D\u52A0\u5165\u9759\u6001\u65B9\u6CD5</h3><p>\u6838\u5FC3\u601D\u60F3\u662F\u4F7F\u7528<code>namespace</code>+<code>enum</code>\u7684\u58F0\u660E\u65B9\u5F0F\u5411\u679A\u4E3E\u7C7B\u578B\u4E2D\u6DFB\u52A0\u9759\u6001\u65B9\u6CD5\uFF0C\u5982\u4E0B\u793A\u4F8B\u4E2D\u6DFB\u52A0\u4E86\u4E09\u4E2A\u65B9\u6CD5\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F7F\u7528\u9759\u6001\u65B9\u6CD5\u7684\u679A\u4E3E</span>
<span class="token keyword">enum</span> WeekDay <span class="token punctuation">{</span>
  Monday<span class="token punctuation">,</span>
  Tuesday<span class="token punctuation">,</span>
  Wednesday<span class="token punctuation">,</span>
  Thursday<span class="token punctuation">,</span>
  Friday<span class="token punctuation">,</span>
  Saturday<span class="token punctuation">,</span>
  Sunday<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u547D\u540D\u7A7A\u95F4</span>
<span class="token keyword">namespace</span> WeekDay <span class="token punctuation">{</span>
  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isBussinessDay</span><span class="token punctuation">(</span>day<span class="token operator">:</span> WeekDay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>day<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> WeekDay<span class="token punctuation">.</span>Saturday<span class="token operator">:</span>
      <span class="token keyword">case</span> WeekDay<span class="token punctuation">.</span>Sunday<span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isWorkDay</span><span class="token punctuation">(</span>day<span class="token operator">:</span>WeekDay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// .....</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">functionName</span><span class="token punctuation">(</span>day<span class="token operator">:</span>WeekDay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ......</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> mon <span class="token operator">=</span> WeekDay<span class="token punctuation">.</span>Monday<span class="token punctuation">;</span>
<span class="token keyword">const</span> sun <span class="token operator">=</span> WeekDay<span class="token punctuation">.</span>Sunday<span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u5411\u679A\u4E3E\u4E2D\u6DFB\u52A0\u7684\u9759\u6001\u65B9\u6CD5</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>WeekDay<span class="token punctuation">.</span><span class="token function">isBussinessDay</span><span class="token punctuation">(</span>mon<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>WeekDay<span class="token punctuation">.</span><span class="token function">isBussinessDay</span><span class="token punctuation">(</span>sun<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3\u3001\u51FD\u6570\u91CD\u8F7D\u548C\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u51FD\u6570\u91CD\u8F7D\u548C\u58F0\u660E" aria-hidden="true">#</a> 3\u3001\u51FD\u6570\u91CD\u8F7D\u548C\u58F0\u660E</h2><p>Ts\u53EF\u4EE5\u58F0\u660E\u51FD\u6570\u91CD\u8F7D\uFF0C\u4F60\u53EA\u9700\u591A\u6B21\u58F0\u660E\u51FD\u6570\u5934\u3002\u6700\u540E\u4E00\u4E2A\u51FD\u6570\u5934\u662F\u5728\u51FD\u6570\u4F53\u5185\u5B9E\u9645\u5904\u4E8E\u6D3B\u52A8\u72B6\u6001\u4F46\u4E0D\u53EF\u7528\u4E8E\u5916\u90E8\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>all<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>topAndBottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> leftAndRight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> c<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> d<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    b <span class="token operator">=</span> c <span class="token operator">=</span> d <span class="token operator">=</span> a<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c <span class="token operator">=</span> a<span class="token punctuation">;</span>
    d <span class="token operator">=</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    top<span class="token operator">:</span> a<span class="token punctuation">,</span>
    right<span class="token operator">:</span> b<span class="token punctuation">,</span>
    bottom<span class="token operator">:</span> c<span class="token punctuation">,</span>
    left<span class="token operator">:</span> d<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Okay: all</span>
<span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Okay: topAndBottom, leftAndRight</span>
<span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Okay: top, right, bottom, left</span>
<span class="token comment">// padding(1, 1, 1); Error: Not a part of the available overloads  \u6CA1\u6709\u540E\u76F8\u5E94\u7684\u51FD\u6570\u91CD\u8F7D\u5F62\u5F0F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u51FD\u6570\u58F0\u660E</p><p>\u51FD\u6570\u58F0\u660E\u6709\u4E24\u79CD\u65B9\u6CD5\uFF0C\u591A\u7528\u7B2C\u4E00\u79CD\u5BF9\u8C61\u7684\u58F0\u660E\u65B9\u5F0F\uFF0C\u51FD\u6570\u65B9\u6CD5\u91CD\u8F7D\u53EA\u9002\u7528\u4E8E\u7B2C\u4E00\u79CD\u5199\u6CD5\u3002</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u51FD\u6570\u58F0\u660E</span>
<span class="token keyword">type</span> <span class="token class-name">LongHand1</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u53E6\u4E00\u79CD\u5199\u6CD5</span>
<span class="token keyword">type</span> <span class="token class-name">LongHand2</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E24\u79CD\u5199\u6CD5\u4E00\u6837\uFF0C\u4F46\u662F\u65B9\u6CD5\u91CD\u8F7D\u7684\u5F62\u5F0F\u53EA\u80FD\u5199\u7B2C\u4E00\u79CD</span>
<span class="token keyword">type</span> <span class="token class-name">LongOverLoad</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4\u3001\u53EF\u8C03\u7528\u7684\u7C7B\u578B\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u53EF\u8C03\u7528\u7684\u7C7B\u578B\u6CE8\u89E3" aria-hidden="true">#</a> 4\u3001\u53EF\u8C03\u7528\u7684\u7C7B\u578B\u6CE8\u89E3</h2><p>\u5B9A\u4E49\u63A5\u53E3\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ReturnString</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49\u53D8\u91CF\u5E76\u4F7F\u7528\uFF0Cfoo\u53EF\u4EE5\u8868\u793A\u4E00\u4E2A\u8FD4\u56DEstring\u7C7B\u578B\u7684\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">const</span> demo1<span class="token operator">:</span> Returning<span class="token punctuation">;</span>
<span class="token comment">// bar \u88AB\u63A8\u65AD\u51FA\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u7C7B\u578B</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token function">demo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u53EF\u4EE5\u5B9A\u4E49\u6BD4\u8F83\u590D\u6742\u7684\u51FD\u6570\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u53EF\u88AB\u8C03\u7528\u7684\u7C7B\u578B\u6CE8\u89E3\u7684\u4F8B\u5B50</span>
<span class="token keyword">interface</span> <span class="token class-name">Complex</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> bar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token operator">...</span>others<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u4E2A\u63A5\u53E3\u53EF\u4EE5\u5B9A\u4E49\u591A\u79CD\u8C03\u7528\u65B9\u5F0F\uFF0C\u53EF\u4EE5\u7528\u5728\u51FD\u6570\u91CD\u8F7D\u5F53\u4E2D\uFF0C\u4F7F\u7528<code>type</code>\u5173\u952E\u5B57\u548C\u63A5\u53E3<code>interface</code>\u90FD\u53EF\u4EE5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F7F\u7528\u7C7B\u578B\u6CE8\u89E3\u6216\u8005\u63A5\u53E3\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u7C7B\u578B</span>

<span class="token keyword">type</span> <span class="token class-name">OverLoadType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">OverLoadInterface</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">StringOrNumber</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">StringOrNumber</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">StringOrNumber</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> foo <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> foo <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> foo <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>foo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> overLoad<span class="token operator">:</span> OverLoadType <span class="token operator">=</span> StringOrNumber<span class="token punctuation">;</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token function">StringOrNumber</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">StringOrNumber</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5\u3001\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> 5\u3001\u7C7B\u578B\u65AD\u8A00</h2><p>TypeScript \u5141\u8BB8\u4F60\u8986\u76D6\u5B83\u7684\u63A8\u65AD\uFF0C\u5E76\u4E14\u80FD\u4EE5\u4F60\u4EFB\u4F55\u4F60\u60F3\u8981\u7684\u65B9\u5F0F\u5206\u6790\u5B83\uFF0C\u8FD9\u79CD\u673A\u5236\u88AB\u79F0\u4E3A\u300C\u7C7B\u578B\u65AD\u8A00\u300D\u3002TypeScript \u7C7B\u578B\u65AD\u8A00\u7528\u6765\u544A\u8BC9\u7F16\u8BD1\u5668\u4F60\u6BD4\u5B83\u66F4\u4E86\u89E3\u8FD9\u4E2A\u7C7B\u578B\uFF0C\u5E76\u4E14\u5B83\u4E0D\u5E94\u8BE5\u518D\u53D1\u51FA\u9519\u8BEF\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  bas<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> ff<span class="token operator">:</span>Foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Foo<span class="token punctuation">;</span>


<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token operator">&lt;</span>Foo<span class="token operator">&gt;</span><span class="token punctuation">{</span>
  <span class="token comment">// \u7F16\u8BD1\u5668\u5C06\u4F1A\u63D0\u4F9B\u5173\u4E8E Foo \u5C5E\u6027\u7684\u4EE3\u7801\u63D0\u793A</span>
  <span class="token comment">// \u4F46\u662F\u5F00\u53D1\u4EBA\u5458\u4E5F\u5F88\u5BB9\u6613\u5FD8\u8BB0\u6DFB\u52A0\u6240\u6709\u7684\u5C5E\u6027</span>
  <span class="token comment">// \u540C\u6837\uFF0C\u5982\u679C Foo \u88AB\u91CD\u6784\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u4E5F\u53EF\u80FD\u88AB\u7834\u574F\uFF08\u4F8B\u5982\uFF0C\u4E00\u4E2A\u65B0\u7684\u5C5E\u6027\u88AB\u6DFB\u52A0\uFF09\u3002</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> foo<span class="token operator">:</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7F16\u8BD1\u5668\u5C06\u4F1A\u63D0\u4F9B Foo \u5C5E\u6027\u7684\u4EE3\u7801\u63D0\u793A</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53CC\u91CD\u65AD\u8A00</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">handler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> event <span class="token keyword">as</span> <span class="token builtin">any</span> <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>TypeScript \u5982\u4F55\u786E\u5B9A\u5355\u4E2A\u65AD\u8A00\u662F\u5426\u8DB3\u591F\uFF1F</p><p>\u5F53 S \u7C7B\u578B\u662F T \u7C7B\u578B\u7684\u5B50\u96C6\uFF0C\u6216\u8005 T \u7C7B\u578B\u662F S \u7C7B\u578B\u7684\u5B50\u96C6\u65F6\uFF0CS \u80FD\u88AB\u6210\u529F\u65AD\u8A00\u6210 T\u3002</p></blockquote><h2 id="_6\u3001\u5BF9\u8C61\u5B57\u9762\u91CF\u68C0\u67E5freshness" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u5BF9\u8C61\u5B57\u9762\u91CF\u68C0\u67E5freshness" aria-hidden="true">#</a> 6\u3001\u5BF9\u8C61\u5B57\u9762\u91CF\u68C0\u67E5Freshness</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">logName</span><span class="token punctuation">(</span>something<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>something<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;matt&#39;</span><span class="token punctuation">,</span> job<span class="token operator">:</span> <span class="token string">&#39;being awesome&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> animal1 <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;cow&#39;</span><span class="token punctuation">,</span> diet<span class="token operator">:</span> <span class="token string">&#39;vegan, but has milk of own specie&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">logName</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token function">logName</span><span class="token punctuation">(</span>animal1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>person\u548Canimal\u4E2D\u7684\u5C5E\u6027\u90FD\u76F8\u5BF9\u4E8E\u8981\u6C42\u7684\u591A\u4E86\uFF0C\u4F46\u662Fts\u7F16\u8BD1\u5668\u6CA1\u6709\u62A5\u9519\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>
<span class="token function">logName</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;matt&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token function">logName</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;matt&#39;</span><span class="token punctuation">,</span> job<span class="token operator">:</span> <span class="token string">&#39;being awesome&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// warning \u8FD9\u91CC\u591A\u4E86\u4E00\u4E2A\u5C5E\u6027diet</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>WARNING</p><p>\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u79CD\u9519\u8BEF\u63D0\u793A\uFF0C\u53EA\u4F1A\u53D1\u751F\u5728\u5BF9\u8C61\u5B57\u9762\u91CF\u4E0A\u3002</p></blockquote><p>\u5141\u8BB8\u989D\u5916\u7684\u5C5E\u6027\u5FC5\u987B\u4F7F\u7528\u7D22\u5F15\u524D\u540D\u6307\u5B9A\u952E\u503C\u5BF9\u7684\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

x <span class="token operator">=</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> baz<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// ok, &#39;baz&#39; \u5C5E\u6027\u5339\u914D\u4E8E\u7D22\u5F15\u7B7E\u540D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7\u3001\u7C7B\u578B\u4FDD\u62A4" tabindex="-1"><a class="header-anchor" href="#_7\u3001\u7C7B\u578B\u4FDD\u62A4" aria-hidden="true">#</a> 7\u3001\u7C7B\u578B\u4FDD\u62A4</h2><p>\u7C7B\u578B\u4FDD\u62A4\u53EF\u4EE5\u5728\u66F4\u5C0F\u8303\u56F4\u4F7F\u7528\u5BF9\u8C61\u7C7B\u578B<code>instanceof</code>,<code>typeof</code>\u7684\u7528\u6CD5\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// typeof \u7684\u4F7F\u7528</span>
<span class="token keyword">function</span> <span class="token function">doSome</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ts\u80FD\u591F\u8BC6\u522B x \u7684\u7C7B\u578B\u662Fstring</span>
  <span class="token punctuation">}</span>
  x<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u65E0\u6CD5\u4FDD\u8BC1 \`x\` \u662F \`string\` \u7C7B\u578B</span>
<span class="token punctuation">}</span>



<span class="token comment">// instanceof \u7684\u4F7F\u7528</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
  common <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
  bar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
  common <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">doStuff</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arg<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// \u5B58\u5728</span>
    arg<span class="token punctuation">.</span>bar<span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u5B58\u5728</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg <span class="token keyword">instanceof</span> <span class="token class-name">Bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arg<span class="token punctuation">.</span>bar<span class="token punctuation">;</span> <span class="token comment">// \u5B58\u5728</span>
    arg<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u5B58\u5728</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>



<span class="token comment">// in\u64CD\u4F5C\u7B26\u5B89\u5168\u7684\u68C0\u67E5\u4E00\u4E2A\u5BF9\u8C61\u4E0A\u662F\u5426\u5B58\u5728\u4E00\u4E2A\u5C5E\u6027\uFF0C\u5B83\u901A\u5E38\u4E5F\u88AB\u4F5C\u4E3A\u7C7B\u578B\u4FDD\u62A4\u4F7F\u7528</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token punctuation">{</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">doIn</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">A</span> <span class="token operator">|</span> <span class="token constant">B</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;y&#39;</span> <span class="token keyword">in</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arg <span class="token comment">// \u7C7B\u578B\u4E3AB</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
    arg <span class="token comment">// \u7C7B\u578B\u4E3AA</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>



<span class="token comment">// \u81EA\u5B9A\u4E49\u7C7B\u578B\u4FDD\u62A4</span>
<span class="token comment">// https://www.jianshu.com/p/57df3cb66d3d  \u7B80\u4E66\u94FE\u63A5\uFF1A\u8BF4\u660E\u4E86\u4E3A\u4EC0\u4E48\u4F7F\u7528is\u5173\u952E\u5B57</span>
<span class="token keyword">function</span> <span class="token function">isFoo</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span><span class="token operator">:</span> arg <span class="token keyword">is</span> Foo <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>arg <span class="token keyword">as</span> Foo<span class="token punctuation">)</span><span class="token punctuation">.</span>foo <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,61);function v(m,b){const a=o("router-link");return c(),l("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[p(a,{to:"#\u76EE\u5F55"},{default:t(()=>[s("\u76EE\u5F55")]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#_1\u3001\u63A5\u53E3"},{default:t(()=>[s("1\u3001\u63A5\u53E3")]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#_1-1\u3001\u7C7B\u53EF\u4EE5\u5B9E\u73B0\u63A5\u53E3"},{default:t(()=>[s("1.1\u3001\u7C7B\u53EF\u4EE5\u5B9E\u73B0\u63A5\u53E3")]),_:1})]),n("li",null,[p(a,{to:"#_1-2\u3001\u5E76\u4E0D\u662F\u6BCF\u4E2A\u63A5\u53E3\u90FD\u5BB9\u6613\u5B9E\u73B0"},{default:t(()=>[s("1.2\u3001\u5E76\u4E0D\u662F\u6BCF\u4E2A\u63A5\u53E3\u90FD\u5BB9\u6613\u5B9E\u73B0")]),_:1})])])]),n("li",null,[p(a,{to:"#_2\u3001\u679A\u4E3E"},{default:t(()=>[s("2\u3001\u679A\u4E3E")]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#_2-1\u3001\u6570\u5B57\u7C7B\u578B\u679A\u4E3E"},{default:t(()=>[s("2.1\u3001\u6570\u5B57\u7C7B\u578B\u679A\u4E3E")]),_:1})]),n("li",null,[p(a,{to:"#_2-2\u3001\u4F7F\u7528\u6570\u5B57\u7C7B\u578B\u4F5C\u4E3A\u6807\u5FD7"},{default:t(()=>[s("2.2\u3001\u4F7F\u7528\u6570\u5B57\u7C7B\u578B\u4F5C\u4E3A\u6807\u5FD7")]),_:1})]),n("li",null,[p(a,{to:"#_2-3\u3001\u5B57\u7B26\u4E32\u679A\u4E3E"},{default:t(()=>[s("2.3\u3001\u5B57\u7B26\u4E32\u679A\u4E3E")]),_:1})]),n("li",null,[p(a,{to:"#_2-4\u3001\u5E38\u91CF\u679A\u4E3E\u7684\u8868\u8FBE\u65B9\u6CD5"},{default:t(()=>[s("2.4\u3001\u5E38\u91CF\u679A\u4E3E\u7684\u8868\u8FBE\u65B9\u6CD5")]),_:1})]),n("li",null,[p(a,{to:"#_2-5\u3001\u5728\u679A\u4E3E\u4E2D\u52A0\u5165\u9759\u6001\u65B9\u6CD5"},{default:t(()=>[s("2.5\u3001\u5728\u679A\u4E3E\u4E2D\u52A0\u5165\u9759\u6001\u65B9\u6CD5")]),_:1})])])]),n("li",null,[p(a,{to:"#_3\u3001\u51FD\u6570\u91CD\u8F7D\u548C\u58F0\u660E"},{default:t(()=>[s("3\u3001\u51FD\u6570\u91CD\u8F7D\u548C\u58F0\u660E")]),_:1})]),n("li",null,[p(a,{to:"#_4\u3001\u53EF\u8C03\u7528\u7684\u7C7B\u578B\u6CE8\u89E3"},{default:t(()=>[s("4\u3001\u53EF\u8C03\u7528\u7684\u7C7B\u578B\u6CE8\u89E3")]),_:1})]),n("li",null,[p(a,{to:"#_5\u3001\u7C7B\u578B\u65AD\u8A00"},{default:t(()=>[s("5\u3001\u7C7B\u578B\u65AD\u8A00")]),_:1})]),n("li",null,[p(a,{to:"#_6\u3001\u5BF9\u8C61\u5B57\u9762\u91CF\u68C0\u67E5freshness"},{default:t(()=>[s("6\u3001\u5BF9\u8C61\u5B57\u9762\u91CF\u68C0\u67E5Freshness")]),_:1})]),n("li",null,[p(a,{to:"#_7\u3001\u7C7B\u578B\u4FDD\u62A4"},{default:t(()=>[s("7\u3001\u7C7B\u578B\u4FDD\u62A4")]),_:1})])])])])]),d])}const g=e(u,[["render",v],["__file","jiekou.html.vue"]]);export{g as default};
