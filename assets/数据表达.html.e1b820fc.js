import{_ as n,o as s,c as a,d as p}from"./app.71cb111c.js";const t={},e=p(`<h2 id="_1\u3001\u7C7B\u578B\u7B7E\u540D\u548Crecord\u63CF\u8FF0\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u7C7B\u578B\u7B7E\u540D\u548Crecord\u63CF\u8FF0\u5BF9\u8C61" aria-hidden="true">#</a> 1\u3001\u7C7B\u578B\u7B7E\u540D\u548CRecord\u63CF\u8FF0\u5BF9\u8C61</h2><p>\u5728TS\u4E2D\u63CF\u8FF0\u5BF9\u8C61\u7684\u6570\u636E\u7C7B\u578B\u7684\u65B9\u6CD5</p><ul><li>\u4F7F\u7528class/constructor\u8FDB\u884C\u63CF\u8FF0</li><li>\u4F7F\u7528type\u5173\u952E\u5B57\u6216\u8005interface\u63CF\u8FF0\u5BF9\u8C61</li></ul><p>\u8868\u793A\u952E\u503C\u5BF9\u7684key\u7C7B\u578B\u4E3Astring\uFF0Cvalue\u7684\u7C7B\u578B\u4E3Anumber</p><p><code>type A = Record&lt;string,number&gt;</code></p><h2 id="_2\u3001ts\u63CF\u8FF0\u51FD\u6570\u5BF9\u8C61\u7684\u5199\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2\u3001ts\u63CF\u8FF0\u51FD\u6570\u5BF9\u8C61\u7684\u5199\u6CD5" aria-hidden="true">#</a> 2\u3001Ts\u63CF\u8FF0\u51FD\u6570\u5BF9\u8C61\u7684\u5199\u6CD5</h2><h3 id="_2-1\u3001\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_2-1\u3001\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> 2.1\u3001\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5B9A\u4E49\u4E24\u79CDTS\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
<span class="token keyword">type</span> <span class="token class-name">Fun2</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>

<span class="token comment">// \u5F62\u53C2\u53EF\u52A0\u53EF\u4EE5\u4E0D\u52A0\uFF0C\u4F46\u662F\u8FD4\u56DE\u503C\u5FC5\u987B\u8981\u4E0E\u5B9A\u4E49\u7684\u7C7B\u578B\u76F8\u5339\u914D</span>
<span class="token keyword">const</span> FunA<span class="token operator">:</span> <span class="token function-variable function">Fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">123</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> FunB<span class="token operator">:</span> <span class="token function-variable function">Fun2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;123&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2\u3001\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_2-2\u3001\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u533A\u522B" aria-hidden="true">#</a> 2.2\u3001\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u533A\u522B</h3><p>\u51FA\u73B0\u62A5\u9519\uFF1A\u4E0D\u80FD\u5C06void\u7A7A\u503C\u8D4B\u503C\u7ED9undefined\uFF0C\u4F46\u662F\u53EF\u4EE5\u5728ts\u4E2D\u5C06null\u4E0Eundefiend\u770B\u6210\u662F\u4E00\u4E2A\u4E1C\u897F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type <span class="token function-variable function">FnReturnVoid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
type <span class="token function-variable function">FnReturnUndefiend</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">undefined</span>

<span class="token keyword">const</span> <span class="token literal-property property">f1</span><span class="token operator">:</span><span class="token function-variable function">FnReturnVoid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token literal-property property">f2</span><span class="token operator">:</span><span class="token function-variable function">FnReturnUndefiend</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span>
<span class="token comment">// \u7F16\u8BD1\u9519\u8BEF\uFF1A</span>
<span class="token literal-property property">BugFinder</span><span class="token operator">:</span>Type <span class="token string">&#39;(=void&#39;</span>is not assignable to type FnReturnUndefiend&#39;<span class="token punctuation">.</span>BugFinder<span class="token operator">:</span>
Type <span class="token keyword">void</span><span class="token string">&#39;is not assignable to type &#39;</span><span class="token keyword">undefined</span>&#39;<span class="token punctuation">.</span>

<span class="token comment">// \u8FD4\u56DE\u503C\u5199\u6210null\u5219\u6CA1\u6709\u62A5\u9519</span>
type <span class="token function-variable function">FnReturnVoid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
type <span class="token function-variable function">FnReturnUndefiend</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">undefined</span>

<span class="token keyword">const</span> <span class="token literal-property property">f1</span><span class="token operator">:</span><span class="token function-variable function">FnReturnVoid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token literal-property property">f2</span><span class="token operator">:</span><span class="token function-variable function">FnReturnUndefiend</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3\u3001\u652F\u6301this\u7684\u51FD\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#_2-3\u3001\u652F\u6301this\u7684\u51FD\u6570\u58F0\u660E" aria-hidden="true">#</a> 2.3\u3001\u652F\u6301this\u7684\u51FD\u6570\u58F0\u660E</h3><p>\u521B\u5EFA\u652F\u6301this\u7684\u51FD\u6570\uFF0C\u58F0\u660E\u652F\u6301this\u7684\u51FD\u6570\u9700\u8981\u6307\u5B9A\u8C03\u7528this\u7684\u7C7B\u578B\uFF0C\u4E5F\u5C31\u662Fthis\u503C\u5F97\u662F\u8C01\uFF0C\u5373this\u662F\u8C01\u8BBE\u5C31\u6709\u8D44\u683C\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  sayHi<span class="token operator">:</span> FnWithThis
<span class="token punctuation">}</span>
<span class="token comment">// \u5B9A\u4E49this\u7684\u7C7B\u578B\uFF0Cthis\u6307\u7684\u662FPerson\uFF0C\u5373\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\u7684\u5BF9\u8C61\u662FPerson</span>
<span class="token keyword">type</span> <span class="token class-name">FnWithThis</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> Person<span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>

<span class="token keyword">const</span> sayHi<span class="token operator">:</span> <span class="token function-variable function">FnWithThis</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u521B\u5EFA\u652F\u6301\u8C03\u7528this\u7684\u51FD\u6570\u5BF9\u8C61</span>
<span class="token keyword">const</span> x<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;person&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  sayHi<span class="token operator">:</span> sayHi
<span class="token punctuation">}</span>

x<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token string">&#39;jack&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u53E6\u4E00\u79CD\u8C03\u7528\u65B9\u6CD5</span>
<span class="token function">sayHi</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token string">&#39;jack&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3\u3001ts\u63CF\u8FF0\u5176\u4ED6\u5BF9\u8C61-\u4E00\u822C\u7528class\u6765\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#_3\u3001ts\u63CF\u8FF0\u5176\u4ED6\u5BF9\u8C61-\u4E00\u822C\u7528class\u6765\u63CF\u8FF0" aria-hidden="true">#</a> 3\u3001Ts\u63CF\u8FF0\u5176\u4ED6\u5BF9\u8C61(\u4E00\u822C\u7528class\u6765\u63CF\u8FF0)</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5E38\u7528\u7684\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token constant">D</span><span class="token operator">:</span> Date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6B63\u5219\u7684\u4E24\u79CD\u8868\u8FBE\u65B9\u5F0F</span>
<span class="token keyword">const</span> r1<span class="token operator">:</span> RegExp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">ab+c</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> r2<span class="token operator">:</span> RegExp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;ab+c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> m<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>

<span class="token comment">// map\u96C6\u5408</span>
<span class="token keyword">const</span> wm1<span class="token operator">:</span> WeakMap<span class="token operator">&lt;</span>object<span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> wm2<span class="token operator">:</span> WeakMap<span class="token operator">&lt;</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u6D4B\u8BD5\u5C0F\u5199object</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> object
<span class="token keyword">const</span> a1<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> a2<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> a3<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> a4<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

<span class="token comment">// set \u96C6\u5408</span>
<span class="token keyword">const</span> s<span class="token operator">:</span>Set<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ws<span class="token operator">:</span>WeakSet<span class="token operator">&lt;</span><span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4\u3001any\u548Cunknown\u548Cnever\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#_4\u3001any\u548Cunknown\u548Cnever\u662F\u4EC0\u4E48" aria-hidden="true">#</a> 4\u3001any\u548Cunknown\u548Cnever\u662F\u4EC0\u4E48\uFF1F</h2><p>unknown\u8868\u793A\u7ED9\u6570\u636E\u7C7B\u578B\u4E0A\u4E86\u4E00\u4E2A\u76D6\u5B50\uFF0C\u4E0D\u786E\u5B9A\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u9700\u8981\u4F7F\u7528\u8BE5\u7C7B\u578B\u7684\u6570\u636E\u7684\u65F6\u5019\u53EF\u4EE5\u5BF9\u6570\u636E\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD\u3002never\u8868\u793A\u4E0D\u5C5E\u4E8E\u4EFB\u4F55\u4E00\u79CD\u6570\u636E\u7C7B\u578B\uFF0C\u53EF\u4EE5\u5BF9\u6570\u636E\u7C7B\u578B\u8FDB\u884C\u68C0\u67E5\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// unknown\u7684\u4F7F\u7528\u573A\u666F</span>
<span class="token keyword">const</span> a<span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// await \u67D0\u4E2A\u5F85\u5904\u7406\u7684Promise\u5F02\u6B65\u4EFB\u52A1</span>
<span class="token comment">// \u65AD\u8A00\u5F97\u5230\u7684a\u7684\u7C7B\u578B</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> a <span class="token keyword">as</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token comment">//  \u5F97\u5230\u7684b\u503C\u7684\u7C7B\u578B\u4E3Anumber</span>

<span class="token comment">// never\u4E0D\u662F\u7528\u6765\u58F0\u660E\u7684\u662F\u7528\u6765\u63A8\u65AD\u7684</span>
<span class="token comment">// never\u8868\u793A\u4E0D\u5305\u542B\u4EFB\u4F55\u5143\u7D20\u7684\u96C6\u5408,\u7A7A\u96C6\u7528\u6765\u505A\u68C0\u67E5</span>
<span class="token comment">// const aa:never = 1</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">&amp;</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token comment">// \u6B64\u65F6A\u7684\u6570\u636E\u7C7B\u578B\u4E3Anever</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">AA</span></span> <span class="token operator">=</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> aa<span class="token operator">:</span> <span class="token constant">AA</span> <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> aa <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  aa<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> aa <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  aa<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> aa <span class="token operator">===</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  aa<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u7ED3\u675F\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5\u3001\u6570\u7EC4\u7C7B\u578B\u7684\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u6570\u7EC4\u7C7B\u578B\u7684\u63CF\u8FF0" aria-hidden="true">#</a> 5\u3001\u6570\u7EC4\u7C7B\u578B\u7684\u63CF\u8FF0</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> a<span class="token operator">:</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u53E6\u4E00\u79CD\u7B49\u4EF7\u5199\u6CD5</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">AA</span></span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u8868\u793A\u53EA\u80FD\u4E09\u4E2A\u7C7B\u578B\u4E3Astring\u7684\u5B57\u7B26\u4E32,\u4E0B\u9762\u8868\u793A\u662F\u4E09\u5143\u7EC4</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">D</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arrD<span class="token operator">:</span> <span class="token constant">D</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">E</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arrE<span class="token operator">:</span> <span class="token constant">E</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u6570\u7EC4\u4E2D\u7684\u5B50\u6570\u7EC4\u7684\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">F</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arrF<span class="token operator">:</span> <span class="token constant">F</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[e];function c(l,i){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","\u6570\u636E\u8868\u8FBE.html.vue"]]);export{u as default};
