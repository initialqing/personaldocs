import{_ as n,o as s,c as a,d as e}from"./app.71cb111c.js";const t={},p=e(`<h2 id="_1\u3001\u63A5\u53E3\u4F5C\u7C7B\u578B\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u63A5\u53E3\u4F5C\u7C7B\u578B\u6CE8\u89E3" aria-hidden="true">#</a> 1\u3001\u63A5\u53E3\u4F5C\u7C7B\u578B\u6CE8\u89E3</h2><p>\u63A5\u53E3\u662F TypeScript \u7684\u4E00\u4E2A\u6838\u5FC3\u77E5\u8BC6\uFF0C\u5B83\u80FD\u5408\u5E76\u4F17\u591A\u7C7B\u578B\u58F0\u660E\u81F3\u4E00\u4E2A\u7C7B\u578B\u58F0\u660E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5B9A\u4E49\u63A5\u53E3\u4F5C\u7C7B\u578B\u6CE8\u89E3</span>
<span class="token keyword">interface</span> <span class="token class-name">Name</span> <span class="token punctuation">{</span>
  first<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  second<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7528\u63A5\u53E3\u505A\u7C7B\u578B\u6CE8\u89E3</span>
<span class="token keyword">let</span> username<span class="token operator">:</span> Name<span class="token punctuation">;</span>
username <span class="token operator">=</span> <span class="token punctuation">{</span>
  first<span class="token operator">:</span> <span class="token string">&#39;TS&#39;</span><span class="token punctuation">;</span>
  second<span class="token operator">:</span> <span class="token string">&#39;Doe&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
username <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// Error:second is missing</span>
  first<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
username <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// Error:second is thr wrong type</span>
  <span class="token class-name">first</span><span class="token operator">:</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span>
  second<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2\u3001\u4F7F\u7528\u5185\u8054\u7C7B\u578B\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u4F7F\u7528\u5185\u8054\u7C7B\u578B\u6CE8\u89E3" aria-hidden="true">#</a> 2\u3001\u4F7F\u7528\u5185\u8054\u7C7B\u578B\u6CE8\u89E3</h2><p>\u53EF\u4EE5\u907F\u514D\u8D77\u522B\u540D\u7684\u9EBB\u70E6\uFF0C\u7ED3\u6784\u4E3A <code>\u53D8\u91CF\u540D:{ /*Structure*/ }</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F7F\u7528\u5185\u8054\u7C7B\u578B\u6CE8\u89E3\uFF0C\u53EF\u4EE5\u907F\u514D\u8D77\u522B\u540D\u7684\u9EBB\u70E6</span>
<span class="token comment">// \u7ED3\u6784\u4E3A :{\u5177\u4F53\u6CE8\u89E3\u7C7B\u578B}</span>
<span class="token keyword">let</span> username<span class="token operator">:</span> <span class="token punctuation">{</span>
  first<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>
  second<span class="token operator">:</span><span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u591A\u6B21\u4F7F\u7528\u76F8\u540C\u7684\u5185\u8054\u6CE8\u89E3\u65F6\uFF0C\u90A3\u4E48\u8003\u8651\u628A\u5B83\u91CD\u6784\u4E3A\u4E00\u4E2A\u63A5\u53E3\uFF08\u6216\u8005\u662F\xA0<code>type alias</code>\uFF09\u662F\u4E00\u4E2A\u4E0D\u9519\u7684\u4E3B\u610F\u3002</p><h2 id="_3\u3001\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u6CDB\u578B" aria-hidden="true">#</a> 3\u3001\u6CDB\u578B</h2><p>\u51FD\u6570\xA0<code>reverse</code>\xA0\u63A5\u53D7\u4E00\u4E2A\u7C7B\u578B\u4E3A\xA0<code>T</code>\uFF08\u6CE8\u610F\u5728\xA0<code>reverse&lt;T&gt;</code>\xA0\u4E2D\u7684\u7C7B\u578B\u53C2\u6570\uFF09 \u7684\u6570\u7EC4\uFF08<code>items: T[]</code>\uFF09\uFF0C\u8FD4\u56DE\u503C\u4E3A\u7C7B\u578B T \u7684\u4E00\u4E2A\u6570\u7EC4\uFF08\u6CE8\u610F\uFF1AT[]\uFF09\uFF0C\u51FD\u6570\xA0<code>reverse</code>\xA0\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E0E\u5B83\u63A5\u53D7\u7684\u53C2\u6570\u7684\u7C7B\u578B\u4E00\u6837\u3002\u5F53\u4F60\u4F20\u5165\xA0<code>const sample = [1, 2, 3]</code>\xA0\u65F6\uFF0CTypeScript \u80FD\u63A8\u65AD\u51FA\xA0<code>reverse</code>\xA0\u4E3A\xA0<code>number[]</code>\xA0\u7C7B\u578B\uFF0C\u4ECE\u800C\u80FD\u7ED9\u4F60\u7C7B\u578B\u5B89\u5168\u3002\u4E0E\u6B64\u76F8\u4F3C\uFF0C\u5F53\u4F60\u4F20\u5165\u4E00\u4E2A\u7C7B\u578B\u4E3A\xA0<code>string[]</code>\xA0\u7C7B\u578B\u7684\u6570\u7EC4\u65F6\uFF0CTypeScript \u80FD\u63A8\u65AD\xA0<code>reverse</code>\xA0\u4E3A\xA0<code>string</code>[] \u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">reverse</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>items<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> toreturn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    toreturn<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> toreturn<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> sample <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> reversed <span class="token operator">=</span> <span class="token function">reverse</span><span class="token punctuation">(</span>sample<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// console.log(reversed);</span>
reversed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">;</span>Error

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ts\u5185\u90E8\u4E2D\u7684Array\u6570\u7EC4\u4F7F\u7528\u4E86\u6CDB\u578B\u5B9A\u4E49\u4E86\u5176\u7ED3\u6784\u6240\u4EE5\uFF0C\u8C03\u7528reverse\u65B9\u6CD5\u4F1A\u83B7\u5F97\u7C7B\u578B\u5B89\u5168</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// JavaScript\u5185\u7F6E\u7684reverse\u65B9\u6CD5\u4F7F\u7528\u6CDB\u578B\u5B9A\u4E49\u4E86\u5176\u7ED3\u6784</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span><span class="token punctuation">{</span>
  <span class="token comment">// reverse()\u7684\u8FD4\u56DE\u503C\u4E3A\u6CDB\u578BT[]</span>
  <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> reversedNums <span class="token operator">=</span> sample<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
reversedNums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span><span class="token comment">//Error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4\u3001\u8054\u5408\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a> 4\u3001\u8054\u5408\u7C7B\u578B</h2><p>\u5982\u679C\u5E0C\u671B\u5C5E\u6027\u7C7B\u578B\u4E3A\u591A\u79CD\u7C7B\u578B\u4E4B\u4E00\u5C31\u53EF\u4EE5\u4F7F\u7528\u8054\u5408\u7C7B\u578B\u4F7F\u7528<code>|</code>\u4F5C\u4E3A\u6807\u8BB0,\u4E3E\u4F8B<code>const a:number|string = 1</code></p><h2 id="_5\u3001\u4EA4\u53C9\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u4EA4\u53C9\u7C7B\u578B" aria-hidden="true">#</a> 5\u3001\u4EA4\u53C9\u7C7B\u578B</h2><p>\u4ECE\u4E24\u4E2A\u5BF9\u8C61\u4E2D\u521A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\uFF0C\u65B0\u7684\u5BF9\u8C61\u4E2D\u5177\u6709\u4E24\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">extend</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span> <span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>first<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span>second<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">K</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">K</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> id <span class="token keyword">in</span> first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token operator">&gt;</span>res<span class="token punctuation">)</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> first<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> id <span class="token keyword">in</span> second<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>res<span class="token punctuation">)</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> second<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> address<span class="token operator">:</span> <span class="token string">&#39;xian&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> description<span class="token operator">:</span> <span class="token string">&#39;xxxx&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6\u3001\u5143\u7EC4\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u5143\u7EC4\u7C7B\u578B" aria-hidden="true">#</a> 6\u3001\u5143\u7EC4\u7C7B\u578B</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5143\u7EC4\u7C7B\u578B</span>
<span class="token keyword">let</span> nameNumber<span class="token operator">:</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span><span class="token builtin">number</span><span class="token punctuation">]</span>
nameNumber <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;jenny&#39;</span><span class="token punctuation">,</span><span class="token number">123123215</span><span class="token punctuation">]</span>

<span class="token comment">// \u4E0Ets\u4E2D\u7684\u89E3\u6784\u8D4B\u503C\u4E00\u8D77\u4F7F\u7528</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>username<span class="token punctuation">,</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> nameNumber
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>num<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","\u7C7B\u578B\u7CFB\u7EDF.html.vue"]]);export{r as default};
