import{_ as n,o as s,c as a,d as p}from"./app.71cb111c.js";const t={},e=p(`<h2 id="_1\u3001\u5B57\u9762\u91CF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u5B57\u9762\u91CF\u7C7B\u578B" aria-hidden="true">#</a> 1\u3001\u5B57\u9762\u91CF\u7C7B\u578B</h2><blockquote><p>\u5B57\u9762\u91CF\u662FJavcaScrpit\u63D0\u4F9B\u7684\u4E00\u4E2A\u51C6\u786E\u53D8\u91CF</p></blockquote><p>\u4F7F\u7528\u7528\u4F8B\uFF0C\u4F7F\u7528\u51FD\u6570\u751F\u6210\u952E\u503C\u5BF9\u7684\u5BF9\u8C61\u7ED3\u6784</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u521B\u5EFA\u57FA\u4E8E\u5B57\u7B26\u4E32\u7684\u679A\u4E3E\u7ED3\u6784</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">strDerection</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">K</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> dir <span class="token operator">=</span> <span class="token function">strDerection</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;North&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;South&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;East&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;West&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5BF9\u5BF9\u8C61\u4F7F\u7528\u7684\u5199\u6CD5</span>
<span class="token keyword">type</span> <span class="token class-name">Direction</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> dir<span class="token punctuation">;</span>
<span class="token keyword">let</span> temp<span class="token operator">:</span> Direction<span class="token punctuation">;</span>
temp <span class="token operator">=</span> dir<span class="token punctuation">.</span>East<span class="token punctuation">;</span><span class="token comment">// ok</span>
temp <span class="token operator">=</span> dir<span class="token punctuation">.</span>North<span class="token punctuation">;</span><span class="token comment">// ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6807\u8BB0\u6240\u6709\u5C5E\u6027\u4E3A\u53EA\u8BFB\u5C5E\u6027\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u58F0\u660E\u521D\u59CB\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">someObj</span>  <span class="token operator">=</span> <span class="token punctuation">{</span>
  attr1<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span>
  attr2<span class="token operator">:</span><span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token comment">//  \u6807\u8BB0\u6240\u6709\u5C5E\u6027\u4F7F\u7528\u53EA\u8BFB\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">someObjReadOnly</span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span>someObj<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EDD\u5BF9\u7684\u4E0D\u53EF\u53D8\u6027\uFF1A\u5C06\u7D22\u5F15\u7B7E\u540D\u6807\u8BB0\u4E3A\u53EA\u8BFB</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">someFoo</span><span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> <span class="token punctuation">[</span>index<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> fooTest<span class="token operator">:</span>someFoo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">456</span><span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fooTest<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
fooTest<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token comment">// error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u53EF\u4EE5\u4EE5\u4E0D\u53D8\u7684\u65B9\u5F0F\u4F7F\u7528\u539F\u751F\u7684js\u6570\u7EC4\uFF0C\u5229\u7528TS\u63D0\u4F9B\u7684<code>ReadonlyArray&lt;T&gt;</code>\u63A5\u53E3</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> foo<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>

foo<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: ReadonlyArray \u4E0A\u4E0D\u5B58\u5728 \`push\`\uFF0C\u56E0\u4E3A\u4ED6\u4F1A\u6539\u53D8\u6570\u7EC4</span>

foo <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5728\u4E00\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u7F16\u8BD1\u5668\u80FD\u628A\u4E00\u4E9B\u7279\u5B9A\u7684\u5C5E\u6027\u63A8\u65AD\u4E3A\xA0<code>readonly</code>\uFF0C\u4F8B\u5982\u5728\u4E00\u4E2A\xA0<code>class</code>\xA0\u4E2D\uFF0C\u5982\u679C\u4F60\u6709\u4E00\u4E2A\u53EA\u542B\u6709\xA0<code>getter</code>\xA0\u4F46\u662F\u6CA1\u6709\xA0<code>setter</code>\xA0\u7684\u5C5E\u6027\uFF0C\u4ED6\u80FD\u88AB\u63A8\u65AD\u4E3A\u53EA\u8BFB\uFF1A</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  firstName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">;</span>
  lastName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;Doe&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">get</span> <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>fullName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// John Doe</span>
person<span class="token punctuation">.</span>fullName <span class="token operator">=</span> <span class="token string">&#39;Dear Reader&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error, fullName \u53EA\u8BFB</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2\u3001\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u6CDB\u578B" aria-hidden="true">#</a> 2\u3001\u6CDB\u578B</h2><p>\u8BBE\u8BA1\u6CDB\u578B\u7684\u5173\u952E\u76EE\u7684\u662F\u5728\u6210\u5458\u4E4B\u95F4\u63D0\u4F9B\u6709\u610F\u4E49\u7684\u7EA6\u675F\uFF0C\u8FD9\u4E9B\u6210\u5458\u53EF\u4EE5\u662F\uFF1A</p><ul><li>\u7C7B\u7684\u5B9E\u4F8B\u6210\u5458</li><li>\u7C7B\u7684\u65B9\u6CD5</li><li>\u51FD\u6570\u53C2\u6570</li><li>\u51FD\u6570\u8FD4\u56DE\u503C</li></ul><p>\u6CDB\u578B\u7528\u6765\u7EA6\u675F\u7684\u4F8B\u5B50\uFF0C\u7528\u6CDB\u578B\u6765\u7EA6\u675F\u6211\u4EEC\u5F80\u5BF9\u8C61\u4E2D\u4F20\u5165\u7684\u6570\u503C\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Queue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  pop <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EA6\u675Fdata\u7684\u7C7B\u578B\u4E3Anumber\u7C7B\u578B</span>
<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u53CD\u8F6C\u6570\u7EC4\u7684\u51FD\u6570</span>
<span class="token keyword">const</span> reverseArr <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> testArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u5229\u7528\u6CDB\u578B\u8D77\u5230\u7C7B\u578B\u7EA6\u675F\u7684\u4F5C\u7528\uFF0C\u624B\u52A8\u6307\u5B9A\u6CDB\u578B\u7684\u7C7B\u578B\u662F\u4EC0\u4E48</span>
<span class="token keyword">const</span> reversed1 <span class="token operator">=</span> <span class="token generic-function"><span class="token function">reverseArr</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>testArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4E0D\u6307\u5B9A\u7C7B\u578B\u7684\u65F6\u5019,\u8FD9\u79CD\u5199\u6CD5\u4F1A\u81EA\u52A8\u63A8\u65AD\u4F20\u5165\u53C2\u6570\u4E2D\u7684\u7C7B\u578B</span>
<span class="token keyword">const</span> reversed2 <span class="token operator">=</span> <span class="token function">reverseArr</span><span class="token punctuation">(</span>testArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4E0D\u80FD\u5C06\u5B57\u7B26\u4E32\u8D4B\u503C\u7ED9\u6570\u7EC4\u4E2D\u7684\u5143\u7D20</span>
reversed1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">;</span> <span class="token comment">// error \u6570\u7EC4\u4E2D\u4E0D\u80FD\u4F20\u5165\u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u503C</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4F60\u53EF\u4EE5\u968F\u610F\u8C03\u7528\u6CDB\u578B\u53C2\u6570\uFF0C\u5F53\u4F60\u4F7F\u7528\u7B80\u5355\u7684\u6CDB\u578B\u65F6\uFF0C\u6CDB\u578B\u5E38\u7528\xA0<code>T</code>\u3001<code>U</code>\u3001<code>V</code>\xA0\u8868\u793A\u3002</p></blockquote><p><code>T</code>\xA0\u53EA\u5728\u4E00\u4E2A\u5730\u65B9\u88AB\u4F7F\u7528\u4E86\uFF0C\u4F46\u5B83\u5E76\u6CA1\u6709\u5728\u6210\u5458\u4E4B\u95F4\u63D0\u4F9B\u7EA6\u675F\xA0<code>T</code>\u7684\u4F8B\u5B50</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4E00\u4E2A\u52A0\u8F7DJSON\u6570\u636E\u7684\u51FD\u6570,\u5176\u8FD4\u56DE\u503C\u4E3A\u4F60\u4F20\u5165\u7684\u4EFB\u610F\u7C7B\u578B\u7684promise</span>
<span class="token keyword">const</span> getJson <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>config<span class="token operator">:</span> <span class="token punctuation">{</span>
  url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  heders<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fetchConfig <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>url<span class="token punctuation">,</span> fetchConfig<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">then</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">loadUserResponse</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  user<span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">loadUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token generic-function"><span class="token function">getJson</span><span class="token generic class-name"><span class="token operator">&lt;</span>loadUserResponse<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;https://example.com/users&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u6B64\u7C7B\u4F3C\uFF1A\u4F7F\u7528\xA0<code>Promise&lt;T&gt;</code>\xA0\u4F5C\u4E3A\u4E00\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u6BD4\u4E00\u4E9B\u5982\uFF1A<code>Promise&lt;any&gt;</code>\xA0\u7684\u5907\u9009\u65B9\u6848\u8981\u597D\u5F88\u591A\u3002</p><p>\u914D\u5408Axios\u4F7F\u7528\u7684\u6CDB\u578B\u7684\u4F8B\u5B50</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u914D\u5408Axios\u4F7F\u7528</span>
<span class="token comment">// \u628A\u540E\u7AEF\u8FD4\u56DE\u7684\u6570\u636E\u683C\u5F0F\u5355\u72EC\u5C01\u88C5\u5728\u4E00\u4E2A\u63A5\u53E3,\u5728interfase.ts\u4E2D</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">RespondseData<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// @type{number}\u8FD4\u56DEnumber\u6570\u636E</span>
  code<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  <span class="token comment">// \u8FD4\u56DE\u6570\u636E\u7C7B\u578B\u4E3AT\u7684\u6570\u636E</span>
  result<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

  <span class="token comment">// \u8FD4\u56DE\u6D88\u606F\u6570\u636E\u6570\u636E\u683C\u5F0F\u4E3Astring</span>

  message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5199\u8BF7\u6C42\u6587\u4EF6</span>
 <span class="token keyword">import</span> Ax <span class="token keyword">from</span> <span class="token string">&#39;./axios&#39;</span><span class="token punctuation">;</span>
 <span class="token keyword">import</span> <span class="token punctuation">{</span> ResponseData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./interface.ts&#39;</span><span class="token punctuation">;</span>

 <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getUser</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> Ax<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>RespondseData<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;./something&#39;</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

<span class="token comment">// \u5199\u51FA\u8FD4\u56DEUser\u7684\u6570\u636E\u7C7B\u578B,\u53EF\u4EE5\u8BA9ts\u987A\u5229\u63A8\u65AD\u51FA\u6211\u4EEC\u60F3\u8981\u7684\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6B64\u65F6user\u88AB\u63A8\u65AD\u51FA\u4E3A</span>
  <span class="token doc-comment comment">/**<span class="token punctuation">{</span>
    code:number,
    result:<span class="token punctuation">{</span>name:string,age:number<span class="token punctuation">}</span>,
    messgae:String
  <span class="token punctuation">}</span>
  */</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">getUser</span><span class="token generic class-name"><span class="token operator">&lt;</span>User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u95EE\u9898\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Empty<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">let</span> x<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> y<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

x <span class="token operator">=</span> y<span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token comment">// -----------------------------------------------------------</span>
<span class="token comment">// \u63A5\u53E3\u52A0\u5165\u6CDB\u578B\u4E4B\u540E\u4F1A\u62A5\u9519</span>
<span class="token keyword">interface</span> <span class="token class-name">Empty<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> x<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> y<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

x <span class="token operator">=</span> y<span class="token punctuation">;</span> <span class="token comment">// Error</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>never\u4E0Evoid\u7684\u5DEE\u5F02</p></blockquote><p>\u4E00\u65E6\u6709\u4EBA\u544A\u8BC9\u4F60\uFF0C<code>never</code>\xA0\u8868\u793A\u4E00\u4E2A\u4ECE\u6765\u4E0D\u4F1A\u4F18\u96C5\u7684\u8FD4\u56DE\u7684\u51FD\u6570\u65F6\uFF0C\u4F60\u53EF\u80FD\u9A6C\u4E0A\u5C31\u4F1A\u60F3\u5230\u4E0E\u6B64\u7C7B\u4F3C\u7684\xA0<code>void</code>\uFF0C\u7136\u800C\u5B9E\u9645\u4E0A\uFF0C<code>void</code>\xA0\u8868\u793A\u6CA1\u6709\u4EFB\u4F55\u7C7B\u578B\uFF0C<code>never</code>\xA0\u8868\u793A\u6C38\u8FDC\u4E0D\u5B58\u5728\u7684\u503C\u7684\u7C7B\u578B\u3002</p><p>\u5F53\u4E00\u4E2A\u51FD\u6570\u8FD4\u56DE\u7A7A\u503C\u65F6\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u4E3A void \u7C7B\u578B\uFF0C\u4F46\u662F\uFF0C\u5F53\u4E00\u4E2A\u51FD\u6570\u6C38\u4E0D\u8FD4\u56DE\u65F6\uFF08\u6216\u8005\u603B\u662F\u629B\u51FA\u9519\u8BEF\uFF09\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u4E3A never \u7C7B\u578B\u3002void \u7C7B\u578B\u53EF\u4EE5\u88AB\u8D4B\u503C\uFF08\u5728 strictNullChecking \u4E3A false \u65F6\uFF09\uFF0C\u4F46\u662F\u9664\u4E86 never \u672C\u8EAB\u4EE5\u5916\uFF0C\u5176\u4ED6\u4EFB\u4F55\u7C7B\u578B\u4E0D\u80FD\u8D4B\u503C\u7ED9 never\u3002</p><h2 id="_3\u3001\u7D22\u5F15\u7B7E\u540D" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u7D22\u5F15\u7B7E\u540D" aria-hidden="true">#</a> 3\u3001\u7D22\u5F15\u7B7E\u540D</h2><p>\u6240\u6709\u6210\u5458\u90FD\u5FC5\u987B\u7B26\u5408\u6240i\u56E0\u7B7E\u540D\u7684\u8981\u6C42</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//</span>
<span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Error</span>
<span class="token keyword">interface</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// Error: y \u5C5E\u6027\u5FC5\u987B\u4E3A number \u7C7B\u578B</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u6709\u9650\u5B57\u7B26\u4E32\u5B57\u9762\u91CF</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F7F\u7528\u6709\u9650\u7684\u5B57\u7B26\u4E32\u5B57\u9762\u91CF</span>
<span class="token keyword">type</span> <span class="token class-name">index</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">fromIndex</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key <span class="token keyword">in</span> index<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> good<span class="token operator">:</span> fromIndex <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token comment">// formindex\u53EA\u80FD\u662Fabc\u4E2D\u7684\u4E00\u4E2A</span>
  a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  c<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  b<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u5EF6\u8FDF\u63A8\u65AD\u53D8\u91CF\u7684\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">FromIndex<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7D22\u5F15\u524D\u540D\u7684\u5D4C\u5957 \u9519\u8BEF\u7684\u793A\u8303\u5982\u4E0B,\u4E0D\u4F1A\u6355\u83B7\u5230\u9519\u8BEF</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u6DFB\u52A0\u7D22\u5F15\u7B7E\u540D\u9700\u8981\u8003\u8651\u7684Api</span>
<span class="token keyword">interface</span> <span class="token class-name">NestedCss</span> <span class="token punctuation">{</span>
  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">[</span>selector<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> NestedCss<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u628A\u5B57\u7B26\u4E32\u7D22\u5F15\u7B7E\u540D\u4E0E\u6709\u6548\u53D8\u91CF\u6DF7\u5408\u4F7F\u7528\u3002\u5982\u679C\u5C5E\u6027\u540D\u79F0\u4E2D\u6709\u62FC\u5199\u9519\u8BEF\uFF0C\u8FD9\u4E2A\u9519\u8BEF\u4E0D\u4F1A\u88AB\u6355\u83B7\u5230\uFF1A</span>
<span class="token keyword">const</span> <span class="token constant">NS</span><span class="token operator">:</span> NestedCss <span class="token operator">=</span> <span class="token punctuation">{</span>
  colowwear<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// ---------------------------------------------</span>
<span class="token comment">// \u6B63\u786E\u7684\u4F8B\u5B50\u5982\u4E0B</span>
<span class="token comment">// \u6B63\u786E\u505A\u6CD5\uFF0C\u628A\u7D22\u5F15\u7B7E\u540D\u5206\u79BB\u5230\u81EA\u5DF1\u7684\u5C5E\u6027\u4E2D</span>
<span class="token keyword">interface</span> <span class="token class-name">NestCss</span> <span class="token punctuation">{</span>
  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// \u76F8\u5F53\u4E8E\u591A\u52A0\u5165\u4E00\u4E2Anest\u5C5E\u6027</span>
  nest<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>selector<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> NestCss<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// example</span>
<span class="token keyword">const</span> example<span class="token operator">:</span> NestCss <span class="token operator">=</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
  nest<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;.subclass&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      color<span class="token operator">:</span> <span class="token string">&#39;pink&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4\u3001\u6D41\u52A8\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u6D41\u52A8\u7684\u7C7B\u578B" aria-hidden="true">#</a> 4\u3001\u6D41\u52A8\u7684\u7C7B\u578B</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> bars <span class="token operator">=</span> Foo<span class="token punctuation">;</span>
<span class="token keyword">let</span> bar1<span class="token operator">:</span> bars<span class="token punctuation">;</span> <span class="token comment">// Error: \u4E0D\u80FD\u627E\u5230\u540D\u79F0 &#39;Bar&#39;</span>

<span class="token comment">// \u65E0\u6CD5\u90A3bars\u5F53\u4F5C\u4E00\u4E2A\u7C7B\u578B\u58F0\u660E\u6765\u4F7F\u7528</span>

<span class="token keyword">namespace</span> importing <span class="token punctuation">{</span>
  <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u76F8\u5F53\u4E8E\u5BF9Foo1\u8FD9\u4E2A\u7C7B\u540D\u53D6\u4E86\u4E00\u4E2A\u522B\u540D</span>
<span class="token keyword">import</span> Bar <span class="token operator">=</span> importing<span class="token punctuation">.</span>Foo1<span class="token punctuation">;</span>
<span class="token keyword">let</span> bar2<span class="token operator">:</span> Bar<span class="token punctuation">;</span> <span class="token comment">// ok</span>

<span class="token comment">//\u6355\u83B7\u7C7B\u6210\u5458\u7684\u7C7B\u578B</span>
<span class="token keyword">class</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u60F3\u8981\u6355\u83B7\u7684\u7C7B\u578B</span>
  foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">declare</span> <span class="token keyword">let</span> _foo<span class="token operator">:</span> Foo1<span class="token punctuation">;</span>
<span class="token comment">// \u6355\u83B7\u6210\u5458\u7684\u7C7B\u578B</span>
<span class="token keyword">let</span> bar3<span class="token operator">:</span> <span class="token keyword">typeof</span> _foo<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>

<span class="token comment">// \u6355\u83B7\u952E\u7684\u540D\u79F0</span>
<span class="token comment">// keyof \u64CD\u4F5C\u7B26\u80FD\u591F\u6355\u83B7\u4E00\u4E2A\u7C7B\u578B\u7684\u952E\u3002\u53EF\u4EE5\u901A\u8FC7\u5B83\u6355\u83B7\u952E\u53D8\u91CF\u7684\u540D\u79F0\uFF0C\u5728\u4F7F\u7528typeof \u83B7\u53D6\u7C7B\u578B\u4E4B\u540E</span>
<span class="token keyword">const</span> Colors <span class="token operator">=</span> <span class="token punctuation">{</span>
  red<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
  blue<span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">colors</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> Colors<span class="token punctuation">;</span>
<span class="token keyword">let</span> color<span class="token operator">:</span> colors<span class="token punctuation">;</span>
color <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">;</span>
color <span class="token operator">=</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5\u3001\u5F02\u5E38\u5904\u7406\u4E0E\u6DF7\u5408" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u5F02\u5E38\u5904\u7406\u4E0E\u6DF7\u5408" aria-hidden="true">#</a> 5\u3001\u5F02\u5E38\u5904\u7406\u4E0E\u6DF7\u5408</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5F02\u5E38\u5904\u7406\uFF1AJavaScript \u6709\u4E00\u4E2A Error \u7C7B\uFF0C\u7528\u4E8E\u5904\u7406\u5F02\u5E38\u3002\u4F60\u53EF\u4EE5\u901A\u8FC7 throw \u5173\u952E\u5B57\u6765\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002\u7136\u540E\u901A\u8FC7 try/catch \u5757\u6765\u6355\u83B7\u6B64\u9519\u8BEF\uFF1A</span>
<span class="token comment">// \u4F7F\u7528Error\uFF1A\u4E0D\u5EFA\u8BAE\u76F4\u63A5\u629B\u51FA\u4E00\u4E2Aerror\u5B57\u7B26\u4E32</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token string">&#39;\u8FD9\u662F\u4E00\u4E2A\u9519\u8BEF\u7684\u505A\u6CD5&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// dosomething</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0D\u9700\u8981\u629B\u51FAError\u9519\u8BEF</span>
<span class="token comment">// node.js\u4E2D\u7684\u56DE\u8C03\u51FD\u6570\u975E\u5E38\u5E38\u89C1,\u51FD\u6570\u4E2D\u4F20\u9012\u4E00\u4E2AError\u5BF9\u8C61</span>

<span class="token keyword">function</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> Error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">doSomethingAsync</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>somethingWrong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;This is my error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">validate</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> error<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> value <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> error<span class="token operator">:</span> <span class="token string">&#39;Invalid value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>TIP</p><p>\u9664\u975E\u4F60\u60F3\u7528\u4EE5\u975E\u5E38\u901A\u7528\uFF08try/catch\uFF09\u7684\u65B9\u5F0F\u5904\u7406\u9519\u8BEF\uFF0C\u5426\u5219\u4E0D\u8981\u629B\u51FA\u9519\u8BEF\u3002</p></blockquote><p>\u6DF7\u5408\u7684\u4EE3\u7801</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Tagged</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">TimesStaped</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">//\u5728ts\u4E2D\u548Cjs\u4E2D\u7C7B\u53EA\u80FD\u4E25\u683C\u7684\u5355\u7EE7\u627F</span>
<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Tagged</span><span class="token punctuation">,</span>TimesStaped<span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">//Classes can only extend a single class</span>

<span class="token comment">//\u4ECE\u53EF\u91CD\u7528\u7EC4\u4EF6\u6784\u5EFA\u7C7B\u7684\u53E6\u4E00\u79CD\u65B9\u5F0F:</span>
<span class="token comment">// \u901A\u8FC7\u57FA\u7C7B\u6765\u6784\u5EFA\u5B83\u4EEC\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u79F0\u4E3A\u6DF7\u5408\u3002</span>
<span class="token comment">// \u4E00\u4E2A\u6DF7\u5408\u7684\u4F8B\u5B50</span>


<span class="token comment">// \u6240\u6709\u7684mixins \u90FD\u9700\u8981\u7684\uFF0C\u6DF7\u5408\u63A5\u53D7\u4E00\u4E2A\u7C7B\uFF0C\u5E76\u4E14\u4F7F\u7528\u65B0\u529F\u80FD\u6269\u5C55\u5B83\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u9700\u8981\u5B9A\u4E49\u6784\u9020\u51FD\u6570\u7684\u7C7B\u578B\uFF1A</span>
<span class="token keyword">type</span> <span class="token class-name">Constructor<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span>

<span class="token comment">//  \u6DFB\u52A0\u5C5E\u6027\u7684\u6DF7\u5408\u7684\u4F8B\u5B50</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">TimesStamped</span><span class="token generic class-name"><span class="token operator">&lt;</span>TBase <span class="token keyword">extends</span> Constructor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Base<span class="token operator">:</span>TBase<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u6DF7\u5408\u4E86\u5C5E\u6027\u4E4B\u540E\u7684\u7C7B</span>
  <span class="token keyword">return</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token keyword">extends</span></span> Base <span class="token punctuation">{</span>
    timestamp <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6DFB\u52A0\u5C5E\u6027\u548C\u65B9\u6CD5\u7684\u4F8B\u5B50</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">Activatable</span><span class="token generic class-name"><span class="token operator">&lt;</span>TBase <span class="token keyword">extends</span> Constructor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Base<span class="token operator">:</span>TBase<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u6DF7\u5408\u4E86\u5C5E\u6027\u548C\u65B9\u6CD5\u4E4B\u540E\u7684\u7C7B</span>
  <span class="token keyword">return</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token keyword">extends</span></span> Base<span class="token punctuation">{</span>
    isActivated  <span class="token operator">=</span> <span class="token boolean">false</span>
    
    <span class="token function">activate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>isActivated <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    
    <span class="token function">deactivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>isActivated <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EC4\u5408\u7C7B</span>
<span class="token comment">// \u7B80\u5355\u7684\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">UserDemo</span><span class="token punctuation">{</span>
  name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6DFB\u52A0Timestamped \u7684 User</span>
<span class="token keyword">const</span> TimestampedUser <span class="token operator">=</span> <span class="token function">TimesStamped</span><span class="token punctuation">(</span>UserDemo<span class="token punctuation">)</span>
<span class="token comment">// \u8FD4\u56DE\u6DFB\u52A0\u5C5E\u6027\u548C\u65B9\u6CD5\u4E4B\u540E\u7684\u65B0\u7C7B</span>
<span class="token keyword">const</span> TimestampedUserActivatable <span class="token operator">=</span> <span class="token function">TimesStamped</span><span class="token punctuation">(</span><span class="token function">Activatable</span><span class="token punctuation">(</span>UserDemo<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> TimestampedUserActivatableExample <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimestampedUserActivatable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> TimeUserExample <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimestampedUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>TimeUserExample<span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>TimestampedUserActivatableExample<span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6\u3001thistype" tabindex="-1"><a class="header-anchor" href="#_6\u3001thistype" aria-hidden="true">#</a> 6\u3001ThisType</h2><p>\u6539\u53D8this\u7684\u7C7B\u578B\uFF0C\u5EFA\u8BAE\u5728<code>ts.config</code>\u4E2D\u5F00\u542F<code>noImplicitThis</code>\u9009\u9879</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5B9A\u4E49\u5BF9\u8C61\u7684\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">objectDescription<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span><span class="token constant">M</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  data<span class="token operator">?</span><span class="token operator">:</span><span class="token constant">D</span><span class="token punctuation">;</span>
  methods<span class="token operator">?</span><span class="token operator">:</span><span class="token constant">M</span> <span class="token operator">&amp;</span> ThisType<span class="token operator">&lt;</span><span class="token constant">D</span> <span class="token operator">&amp;</span> <span class="token constant">M</span><span class="token operator">&gt;</span> <span class="token comment">// this\u7684\u7C7B\u578B\u662FD &amp; M</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">makeObject</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span><span class="token constant">M</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>desc<span class="token operator">:</span>objectDescription<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span><span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">D</span> <span class="token operator">&amp;</span> <span class="token constant">M</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> data<span class="token operator">:</span>object <span class="token operator">=</span> desc<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> methods<span class="token operator">:</span>object <span class="token operator">=</span> desc<span class="token punctuation">.</span>methods <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token operator">...</span>data<span class="token punctuation">,</span><span class="token operator">...</span>methods<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token constant">D</span> <span class="token operator">&amp;</span> <span class="token constant">M</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token function">makeObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  data<span class="token operator">:</span><span class="token punctuation">{</span>x<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  methods<span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token function">moveBy</span><span class="token punctuation">(</span>dx<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>dy<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> dx
       <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> dy
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","\u5B57\u9762\u91CF.html.vue"]]);export{r as default};
