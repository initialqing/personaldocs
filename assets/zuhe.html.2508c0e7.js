import{_ as n,o as s,c as a,d as p}from"./app.71cb111c.js";const t={},e=p(`<h1 id="\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u5408" aria-hidden="true">#</a> \u7EC4\u5408</h1><h2 id="_39-\u7EC4\u5408\u603B\u548C" tabindex="-1"><a class="header-anchor" href="#_39-\u7EC4\u5408\u603B\u548C" aria-hidden="true">#</a> 39.\u7EC4\u5408\u603B\u548C</h2><h3 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u7ED9\u4F60\u4E00\u4E2A \u65E0\u91CD\u590D\u5143\u7D20 \u7684\u6574\u6570\u6570\u7EC4 candidates \u548C\u4E00\u4E2A\u76EE\u6807\u6574\u6570 target \uFF0C\u627E\u51FA candidates \u4E2D\u53EF\u4EE5\u4F7F\u6570\u5B57\u548C\u4E3A\u76EE\u6807\u6570 target \u7684 \u6240\u6709 \u4E0D\u540C\u7EC4\u5408 \uFF0C\u5E76\u4EE5\u5217\u8868\u5F62\u5F0F\u8FD4\u56DE\u3002\u4F60\u53EF\u4EE5\u6309 \u4EFB\u610F\u987A\u5E8F \u8FD4\u56DE\u8FD9\u4E9B\u7EC4\u5408\u3002</p><p>candidates \u4E2D\u7684 \u540C\u4E00\u4E2A \u6570\u5B57\u53EF\u4EE5 <strong>\u65E0\u9650\u5236\u91CD\u590D\u88AB\u9009\u53D6</strong> \u3002\u5982\u679C\u81F3\u5C11\u4E00\u4E2A\u6570\u5B57\u7684\u88AB\u9009\u6570\u91CF\u4E0D\u540C\uFF0C\u5219\u4E24\u79CD\u7EC4\u5408\u662F\u4E0D\u540C\u7684\u3002</p><p>\u5BF9\u4E8E\u7ED9\u5B9A\u7684\u8F93\u5165\uFF0C\u4FDD\u8BC1\u548C\u4E3A target \u7684\u4E0D\u540C\u7EC4\u5408\u6570\u5C11\u4E8E 150 \u4E2A\u3002</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u8F93\u5165\uFF1Acandidates = [2,3,6,7], target = 7</p><p>\u8F93\u51FA\uFF1A[[2,2,3],[7]]</p><p>\u89E3\u91CA\uFF1A2 \u548C 3 \u53EF\u4EE5\u5F62\u6210\u4E00\u7EC4\u5019\u9009\uFF0C2 + 2 + 3 = 7 \u3002\u6CE8\u610F 2 \u53EF\u4EE5\u4F7F\u7528\u591A\u6B21\u30027 \u4E5F\u662F\u4E00\u4E2A\u5019\u9009\uFF0C 7 = 7 \u3002\u4EC5\u6709\u8FD9\u4E24\u79CD\u7EC4\u5408\u3002</p></div><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u7EC4\u5408\u95EE\u9898\u5173\u4E8E\u4F7F\u7528startIndex\u63A7\u5236for\u5FAA\u73AF\u7684\u8D77\u59CB\u4F4D\u7F6E\u7684\u6280\u5DE7</p><ol><li>\u5BF9\u4E8E\u4E00\u4E2A\u96C6\u5408\u6C42\u7EC4\u5408\u9700\u8981startIndex</li><li>\u5BF9\u591A\u4E2A\u96C6\u5408\u53D6\u7EC4\u5408\uFF0C\u6BCF\u4E2A\u96C6\u5408\u4E4B\u95F4\u4E0D\u4E92\u76F8\u5F71\u54CD\u5C31\u4E0D\u9700\u8981startIndex</li></ol><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">combinationSum</span><span class="token punctuation">(</span>candidates<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> path<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">function</span> <span class="token function">backTracking</span><span class="token punctuation">(</span>startIndex<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> target<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6536\u96C6\u7ED3\u679C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> candidates<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            target <span class="token operator">-=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
         	<span class="token comment">// \u5F00\u59CB\u7D22\u5F15\u4ECE\u5F53\u524D\u4F4D\u7F6E\u5F00\u59CB</span>
            <span class="token function">backTracking</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> target<span class="token punctuation">)</span> <span class="token comment">// \u5173\u952E\u70B9:\u4E0D\u7528i+1\u4E86\uFF0C\u8868\u793A\u53EF\u4EE5\u91CD\u590D\u8BFB\u53D6\u5F53\u524D\u7684\u6570</span>
            path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            target <span class="token operator">+=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">backTracking</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_17-\u7535\u8BDD\u53F7\u7801\u5B57\u6BCD\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#_17-\u7535\u8BDD\u53F7\u7801\u5B57\u6BCD\u7EC4\u5408" aria-hidden="true">#</a> 17.\u7535\u8BDD\u53F7\u7801\u5B57\u6BCD\u7EC4\u5408</h2><h3 id="\u9898\u76EE\u63CF\u8FF0-1" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-1" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u7ED9\u5B9A\u4E00\u4E2A\u4EC5\u5305\u542B\u6570\u5B57 2-9 \u7684\u5B57\u7B26\u4E32\uFF0C\u8FD4\u56DE\u6240\u6709\u5B83\u80FD\u8868\u793A\u7684\u5B57\u6BCD\u7EC4\u5408\u3002\u7B54\u6848\u53EF\u4EE5\u6309 \u4EFB\u610F\u987A\u5E8F \u8FD4\u56DE\u3002</p><p>\u7ED9\u51FA\u6570\u5B57\u5230\u5B57\u6BCD\u7684\u6620\u5C04\u5982\u4E0B\uFF08\u4E0E\u7535\u8BDD\u6309\u952E\u76F8\u540C\uFF09\u3002\u6CE8\u610F 1 \u4E0D\u5BF9\u5E94\u4EFB\u4F55\u5B57\u6BCD\u3002</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u8F93\u5165\uFF1Adigits = &quot;23&quot;</p><p>\u8F93\u51FA\uFF1A[&quot;ad&quot;,&quot;ae&quot;,&quot;af&quot;,&quot;bd&quot;,&quot;be&quot;,&quot;bf&quot;,&quot;cd&quot;,&quot;ce&quot;,&quot;cf&quot;]</p></div><h3 id="\u601D\u8DEF-1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-1" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u56E0\u4E3A\u662F\u4E0D\u540C\u96C6\u5408\u4E4B\u95F4\u7684\u64CD\u4F5C\uFF0C\u6240\u4EE5\u4E0D\u9700\u8981startIndex\u7D22\u5F15\u6765\u8BB0\u5F55\u4F4D\u7F6E\uFF0C\u6BCF\u4E2A\u96C6\u5408\u90FD\u53EF\u4EE5\u4ECE\u65B0\u9009\u53D6\uFF0C\u53EF\u4EE5\u4F7F\u7528map\u96C6\u5408\u6216\u8005\u6570\u7EC4\u8FDB\u884C\u6620\u5C04</p><p><code>const arr = [&#39;&#39;,&#39;&#39;,&#39;abc&#39;,&#39;def&#39;,&#39;ghi&#39;,&#39;jkl&#39;,&#39;mno&#39;,&#39;pqrs&#39;,&#39;tuv&#39;,&#39;wxyz&#39;]</code>,map\u96C6\u5408\u7684\u5B9A\u4E49\u65B9\u5F0F\u5728\u4E0B\u65B9\u7684\u4EE3\u7801\u5F53\u4E2D</p><h3 id="\u4EE3\u7801\u5B9E\u73B0-1" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-1" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">letterCombinations</span><span class="token punctuation">(</span>digits<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>digits<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> res<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> map<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token number">0</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token number">1</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token number">2</span><span class="token operator">:</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span>
        <span class="token number">3</span><span class="token operator">:</span><span class="token string">&#39;def&#39;</span><span class="token punctuation">,</span>
        <span class="token number">4</span><span class="token operator">:</span><span class="token string">&#39;ghi&#39;</span><span class="token punctuation">,</span>
        <span class="token number">5</span><span class="token operator">:</span><span class="token string">&#39;jkl&#39;</span><span class="token punctuation">,</span>
        <span class="token number">6</span><span class="token operator">:</span><span class="token string">&#39;mno&#39;</span><span class="token punctuation">,</span>
        <span class="token number">7</span><span class="token operator">:</span><span class="token string">&#39;pqrs&#39;</span><span class="token punctuation">,</span>
        <span class="token number">8</span><span class="token operator">:</span><span class="token string">&#39;tuv&#39;</span><span class="token punctuation">,</span>
        <span class="token number">9</span><span class="token operator">:</span><span class="token string">&#39;wxyz&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">backTracking</span><span class="token punctuation">(</span>depth<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">===</span> digits<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> ele <span class="token keyword">of</span> map<span class="token punctuation">[</span>digits<span class="token punctuation">[</span>depth<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span>
            <span class="token function">backTracking</span><span class="token punctuation">(</span>depth<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">backTracking</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_77-\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#_77-\u7EC4\u5408" aria-hidden="true">#</a> 77.\u7EC4\u5408</h2><h3 id="\u9898\u76EE\u63CF\u8FF0-2" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-2" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u7ED9\u5B9A\u4E24\u4E2A\u6574\u6570 <code>n</code> \u548C <code>k</code>\uFF0C\u8FD4\u56DE\u8303\u56F4 <code>[1, n]</code> \u4E2D\u6240\u6709\u53EF\u80FD\u7684 <code>k</code> \u4E2A\u6570\u7684\u7EC4\u5408\u3002</p><p>\u4F60\u53EF\u4EE5\u6309 <strong>\u4EFB\u4F55\u987A\u5E8F</strong> \u8FD4\u56DE\u7B54\u6848\u3002</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u8F93\u5165\uFF1An = 4, k = 2</p><p>\u8F93\u51FA\uFF1A [[2,4],[3,4],[2,3],[1,2],[1,3],[1,4]]</p></div><h3 id="\u601D\u8DEF-2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-2" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u5728<code>path.length === k</code>\u7684\u65F6\u5019\u6536\u96C6\u7ED3\u679C\uFF0C\u5176\u4ED6\u7684\u5177\u4F53\u770B\u4EE3\u7801</p><h3 id="\u4EE3\u7801\u5B9E\u73B0-2" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-2" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">combine</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> k<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> path<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">function</span> <span class="token function">backTracking</span><span class="token punctuation">(</span>startIndex<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">===</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u540C\u4E00\u4E2A\u96C6\u5408\u6C42\u7EC4\u5408\u9700\u8981startIndex</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
            <span class="token function">backTracking</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">backTracking</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_40-\u7EC4\u5408\u603B\u548Cii" tabindex="-1"><a class="header-anchor" href="#_40-\u7EC4\u5408\u603B\u548Cii" aria-hidden="true">#</a> 40.\u7EC4\u5408\u603B\u548C\u2161</h2><h3 id="\u9898\u76EE\u63CF\u8FF0-3" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-3" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u7ED9\u5B9A\u4E00\u4E2A\u5019\u9009\u4EBA\u7F16\u53F7\u7684\u96C6\u5408 candidates \u548C\u4E00\u4E2A\u76EE\u6807\u6570 target \uFF0C\u627E\u51FA candidates \u4E2D\u6240\u6709\u53EF\u4EE5\u4F7F\u6570\u5B57\u548C\u4E3A target \u7684\u7EC4\u5408\u3002</p><p><strong>candidates \u4E2D\u7684\u6BCF\u4E2A\u6570\u5B57\u5728\u6BCF\u4E2A\u7EC4\u5408\u4E2D\u53EA\u80FD\u4F7F\u7528 \u4E00\u6B21</strong> \u3002</p><p>\u6CE8\u610F\uFF1A\u89E3\u96C6\u4E0D\u80FD\u5305\u542B\u91CD\u590D\u7684\u7EC4\u5408\u3002</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u8F93\u5165: candidates = [10,1,2,7,6,1,5], target = 8</p><p>\u8F93\u51FA:[</p><p>[1,1,6],</p><p>[1,2,5],</p><p>[1,7],</p><p>[2,6]</p><p>]</p></div><h3 id="\u601D\u8DEF-3" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-3" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u548C\u7EC4\u5408\u603B\u548C\u7684\u533A\u522B\u662F\u9700\u8981\u53BB\u91CD\uFF0C\u53BB\u91CD\u7684\u65B9\u6CD5\uFF1A1\u3001\u4F7F\u7528used\u6570\u7EC4\u53BB\u91CD 2\u3001\u76F4\u63A5\u53BB\u91CD</p><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\u5728\u9047\u5230\u9700\u8981\u53BB\u91CD\u7684\u65F6\u5019\uFF0C\u9700\u8981\u5148\u5C06\u539F\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF0C\u8BA9\u76F8\u8FD1\u7684\u5143\u7D20\u6328\u5728\u4E00\u8D77\u3002</p><p>\u5176\u4ED6\u7684\u4EE3\u7801\u4E0E\u7EC4\u5408\u603B\u548C\u7684\u7B2C\u4E00\u79CD\u60C5\u51B5\u4E00\u6837\u3002</p><h3 id="\u4EE3\u7801\u5B9E\u73B0-3" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-3" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">combinationSum2</span><span class="token punctuation">(</span>candidates<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> path<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    candidates<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token operator">-</span>b<span class="token punctuation">)</span>
    <span class="token keyword">let</span> sum<span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">function</span> <span class="token function">backTrickng</span><span class="token punctuation">(</span>startIndex<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// if(sum &gt; target) {</span>
        <span class="token comment">//     return</span>
        <span class="token comment">// }</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>sum <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>candidates<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u76F4\u63A5\u53BB\u91CD\u52A0\u4E0A\u4E86\u51CF\u679D\u7684\u64CD\u4F5C\u3002</span>
            <span class="token comment">// \u4F7F\u7528used\u6570\u7EC4\u7684\u5224\u65AD\u6761\u4EF6\u4E3A (i&gt;0 &amp;&amp; candidates[i] === candidates[i-1] &amp;&amp; used[i-1] = false)</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&gt;</span> startIndex <span class="token operator">&amp;&amp;</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> candidates<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> sum <span class="token operator">+</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span>
            <span class="token punctuation">}</span>
            sum <span class="token operator">+=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token function">backTrickng</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            sum <span class="token operator">-=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">backTrickng</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_216-\u7EC4\u5408\u603B\u548Ciii" tabindex="-1"><a class="header-anchor" href="#_216-\u7EC4\u5408\u603B\u548Ciii" aria-hidden="true">#</a> 216.\u7EC4\u5408\u603B\u548C\u2162</h2><h3 id="\u9898\u76EE\u63CF\u8FF0-4" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-4" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u627E\u51FA\u6240\u6709\u76F8\u52A0\u4E4B\u548C\u4E3A n \u7684 k \u4E2A\u6570\u7684\u7EC4\u5408\uFF0C\u4E14\u6EE1\u8DB3\u4E0B\u5217\u6761\u4EF6\uFF1A</p><p>\u53EA\u4F7F\u7528\u6570\u5B571\u52309 \u6BCF\u4E2A\u6570\u5B57 \u6700\u591A\u4F7F\u7528\u4E00\u6B21 \u8FD4\u56DE \u6240\u6709\u53EF\u80FD\u7684\u6709\u6548\u7EC4\u5408\u7684\u5217\u8868 \u3002\u8BE5\u5217\u8868<strong>\u4E0D\u80FD\u5305\u542B\u76F8\u540C\u7684\u7EC4\u5408\u4E24\u6B21</strong>\uFF0C\u7EC4\u5408\u53EF\u4EE5\u4EE5\u4EFB\u4F55\u987A\u5E8F\u8FD4\u56DE</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u8F93\u5165: k = 3, n = 7</p><p>\u8F93\u51FA: [[1,2,4]]</p><p>\u89E3\u91CA:</p><p>1 + 2 + 4 = 7</p><p>\u6CA1\u6709\u5176\u4ED6\u7B26\u5408\u7684\u7EC4\u5408\u4E86\u3002</p></div><h3 id="\u601D\u8DEF-4" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-4" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u6536\u96C6\u7ED3\u679C\u7684\u5224\u65AD\u6761\u4EF6\u6709\u4E00\u70B9\u4E0D\u4E00\u6837\uFF0C\u9700\u8981\u5148\u6EE1\u8DB3K\u4E2A\u6570\u7684\u6761\u4EF6\uFF0C\u7136\u540E\u5224\u65ADsum\u7684\u6570\u503C\u662F\u5426\u548C\u7ED3\u679C\u76F8\u7B49\u3002</p><h3 id="\u4EE3\u7801\u5B9E\u73B0-4" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-4" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">combinationSum3</span><span class="token punctuation">(</span>k<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> path<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> sum<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">function</span> <span class="token function">backTracking</span><span class="token punctuation">(</span>startIndex<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> n<span class="token punctuation">)</span> <span class="token keyword">return</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">===</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">===</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sum<span class="token operator">+=</span>i
            path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
            <span class="token function">backTracking</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            sum<span class="token operator">-=</span>i
            path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">backTracking</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,52),o=[e];function c(i,u){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","zuhe.html.vue"]]);export{r as default};
